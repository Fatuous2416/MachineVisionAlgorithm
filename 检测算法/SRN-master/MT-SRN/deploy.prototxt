name: "FCN"

input: "data"
input_dim: 1
input_dim: 3
input_dim: 423
input_dim: 480

layer { bottom: 'data' top: 'conv1_1' name: 'conv1_1' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 64 pad: 35 kernel_size: 3 } }
layer { bottom: 'conv1_1' top: 'conv1_1' name: 'relu1_1' type: "ReLU" }
layer { bottom: 'conv1_1' top: 'conv1_2' name: 'conv1_2' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv1_2' top: 'conv1_2' name: 'relu1_2' type: "ReLU" }
layer { name: 'pool1' bottom: 'conv1_2' top: 'pool1' type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }

layer { name: 'conv2_1' bottom: 'pool1' top: 'conv2_1' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv2_1' top: 'conv2_1' name: 'relu2_1' type: "ReLU" }
layer { bottom: 'conv2_1' top: 'conv2_2' name: 'conv2_2' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv2_2' top: 'conv2_2' name: 'relu2_2' type: "ReLU" }
layer { bottom: 'conv2_2' top: 'pool2' name: 'pool2' type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }

layer { bottom: 'pool2' top: 'conv3_1' name: 'conv3_1' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv3_1' top: 'conv3_1' name: 'relu3_1' type: "ReLU" }
layer { bottom: 'conv3_1' top: 'conv3_2' name: 'conv3_2' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv3_2' top: 'conv3_2' name: 'relu3_2' type: "ReLU" }
layer { bottom: 'conv3_2' top: 'conv3_3' name: 'conv3_3' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv3_3' top: 'conv3_3' name: 'relu3_3' type: "ReLU" }
layer { bottom: 'conv3_3' top: 'pool3' name: 'pool3' type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }

layer { bottom: 'pool3' top: 'conv4_1' name: 'conv4_1' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv4_1' top: 'conv4_1' name: 'relu4_1' type: "ReLU" }
layer { bottom: 'conv4_1' top: 'conv4_2' name: 'conv4_2' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv4_2' top: 'conv4_2' name: 'relu4_2' type: "ReLU" }
layer { bottom: 'conv4_2' top: 'conv4_3' name: 'conv4_3' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv4_3' top: 'conv4_3' name: 'relu4_3' type: "ReLU" }
layer { bottom: 'conv4_3' top: 'pool4' name: 'pool4' type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }

layer { bottom: 'pool4' top: 'conv5_1' name: 'conv5_1' type: "Convolution"
  param { lr_mult: 100 decay_mult: 1 } param { lr_mult: 200 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv5_1' top: 'conv5_1' name: 'relu5_1' type: "ReLU" }
layer { bottom: 'conv5_1' top: 'conv5_2' name: 'conv5_2' type: "Convolution"
  param { lr_mult: 100 decay_mult: 1 } param { lr_mult: 200 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv5_2' top: 'conv5_2' name: 'relu5_2' type: "ReLU" }
layer { bottom: 'conv5_2' top: 'conv5_3' name: 'conv5_3' type: "Convolution"
  param { lr_mult: 100 decay_mult: 1 } param { lr_mult: 200 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv5_3' top: 'conv5_3' name: 'relu5_3' type: "ReLU" }

## buffer layers for contour
layer { bottom: 'conv1_2' top: 'conv_cbuf_1' name: 'conv_cbuf_1' type: "Convolution"
  param { lr_mult: 100 decay_mult: 1 } param { lr_mult: 200 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3 }}
layer { bottom: 'conv_cbuf_1' top: 'conv_cbuf_1' name: 'relu_cbuf_1' type: "ReLU" }
layer { bottom: 'conv2_2' top: 'conv_cbuf_2' name: 'conv_cbuf_2' type: "Convolution"
  param { lr_mult: 100 decay_mult: 1 } param { lr_mult: 200 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3 }}
layer { bottom: 'conv_cbuf_2' top: 'conv_cbuf_2' name: 'relu_cbuf_2' type: "ReLU" }
layer { bottom: 'conv3_3' top: 'conv_cbuf_3' name: 'conv_cbuf_3' type: "Convolution"
  param { lr_mult: 100 decay_mult: 1 } param { lr_mult: 200 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3 }}
layer { bottom: 'conv_cbuf_3' top: 'conv_cbuf_3' name: 'relu_cbuf_3' type: "ReLU" }
layer { bottom: 'conv4_3' top: 'conv_cbuf_4' name: 'conv_cbuf_4' type: "Convolution"
  param { lr_mult: 100 decay_mult: 1 } param { lr_mult: 200 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 }}
layer { bottom: 'conv_cbuf_4' top: 'conv_cbuf_4' name: 'relu_cbuf_4' type: "ReLU" }
layer { bottom: 'conv5_3' top: 'conv_cbuf_5' name: 'conv_cbuf_5' type: "Convolution"
  param { lr_mult: 100 decay_mult: 1 } param { lr_mult: 200 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 }}
layer { bottom: 'conv_cbuf_5' top: 'conv_cbuf_5' name: 'relu_cbuf_5' type: "ReLU" }

#-----
layer { name: 'score-cbuf_dsn1' type: "Convolution" bottom: 'conv_cbuf_1' top: 'score-cbuf_dsn1'
  param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#----
layer { name: 'score-cbuf_dsn2' type: "Convolution" bottom: 'conv_cbuf_2' top: 'score-cbuf_dsn2'
  param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#---
layer { name: 'score-cbuf_dsn3' type: "Convolution" bottom: 'conv_cbuf_3' top: 'score-cbuf_dsn3'
  param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#--
layer { name: 'score-cbuf_dsn4' type: "Convolution" bottom: 'conv_cbuf_4' top: 'score-cbuf_dsn4'
  param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#-
layer { name: 'score-cbuf_dsn5' type: "Convolution" bottom: 'conv_cbuf_5' top: 'score-cbuf_dsn5'
  param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 2 kernel_size: 1} }
  
layer{
  type: "Slice" name: "cbuf_slice5"
  bottom: "score-cbuf_dsn5"
  top: "score-cbuf_dsn5-slice1"
  top: "score-cbuf_dsn5-slice2"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

# the loss of side output5
layer { type: "Deconvolution" name: 'upsamplec_16' bottom: 'score-cbuf_dsn5-slice2' top: 'concat5-cbuf_score-up-loss'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 32 stride: 16 num_output: 1 } }
layer { type: "Crop" name: 'crop5-cbuf_loss' bottom: 'concat5-cbuf_score-up-loss' bottom: 'data' top: 'concat5-cbuf_score-loss' }
layer { type: "Sigmoid" name: "sigmoid-cbuf_dsn5" bottom: "concat5-cbuf_score-loss"  top:"sigmoid-cbuf_dsn5"}

#-
# 2x
layer { type: "Deconvolution" name: 'upsamplec_5_4' bottom: 'score-cbuf_dsn5-slice1' top: 'score-cbuf_dsn5-up'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 4 stride: 2 num_output: 1 } }
layer { type: "Crop" name: 'cbuf_crop5' bottom: 'score-cbuf_dsn5-up' bottom: 'score-cbuf_dsn4' top: 'upscore-cbuf_dsn5' }

layer { name: "concat_cbuf_5_4" bottom: "upscore-cbuf_dsn5"  bottom: "score-cbuf_dsn4" top: "concat-cbuf_upscore4" type: "Concat"
  concat_param { concat_dim: 1} }
layer { 
  name: 'cat4-cbuf_score' type: "Convolution" 
  bottom: 'concat-cbuf_upscore4' top: 'concat4-cbuf_score'
  param { lr_mult: 0.05 decay_mult: 1 } param { lr_mult: 0.002 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 2 kernel_size: 1 weight_filler {type: "constant" value: 0.25 } } 
}

layer{
  type: "Slice" name: "scbuf_lice4"
  bottom: "concat4-cbuf_score"
  top: "concat4-cbuf_score-slice1"
  top: "concat4-cbuf_score-slice2"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

# the loss of side output4
layer { type: "Deconvolution" name: 'upsamplec_8' bottom: 'concat4-cbuf_score-slice2' top: 'concat4-cbuf_score-up-loss'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 16 stride: 8 num_output: 1 } }
layer { type: "Crop" name: 'crop4-cbuf_loss' bottom: 'concat4-cbuf_score-up-loss' bottom: 'data' top: 'concat4-cbuf_score-loss' }
layer { type: "Sigmoid" name: "sigmoid-cbuf_dsn4" bottom: "concat4-cbuf_score-loss"  top:"sigmoid-cbuf_dsn4"}

#--
# 2x
layer { type: "Deconvolution" name: 'upsamplec_4_3' bottom: 'concat4-cbuf_score-slice1' top: 'score-cbuf_dsn4-up'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 4 stride: 2 num_output: 1 } }  
layer { type: "Crop" name: 'cbuf_crop4' bottom: 'score-cbuf_dsn4-up' bottom: 'score-cbuf_dsn3' top: 'upscore-cbuf_dsn4' }
layer { name: "concat_cbuf_4_3" bottom: "upscore-cbuf_dsn4"  bottom: "score-cbuf_dsn3" top: "concat-cbuf_upscore3" type: "Concat"
  concat_param { concat_dim: 1} }
layer { 
  name: 'cat3-cbuf_score' type: "Convolution" 
  bottom: 'concat-cbuf_upscore3' top: 'concat3-cbuf_score'
  param { lr_mult: 0.05 decay_mult: 1 } param { lr_mult: 0.002 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 2 kernel_size: 1  weight_filler {type: "constant" value: 0.25 } } 
}

layer{
  type: "Slice" name: "cbuf_slice3"
  bottom: "concat3-cbuf_score"
  top: "concat3-cbuf_score-slice1"
  top: "concat3-cbuf_score-slice2"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

# the loss of side output3
layer { type: "Deconvolution" name: 'upsamplec_4' bottom: 'concat3-cbuf_score-slice2' top: 'concat3-cbuf_score-up-loss'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 8 stride: 4 num_output: 1 } }
layer { type: "Crop" name: 'crop3-cbuf_loss' bottom: 'concat3-cbuf_score-up-loss' bottom: 'data' top: 'concat3-cbuf_score-loss' }
layer { type: "Sigmoid" name: "sigmoid-cbuf_dsn3" bottom: "concat3-cbuf_score-loss"  top:"sigmoid-cbuf_dsn3"}

#---
# 2x
layer { type: "Deconvolution" name: 'upsamplec_3_2' bottom: 'concat3-cbuf_score-slice1' top: 'score-cbuf_dsn3-up'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 4 stride: 2 num_output: 1 } }
layer { type: "Crop" name: 'cbuf_crop3' bottom: 'score-cbuf_dsn3-up' bottom: 'score-cbuf_dsn2' top: 'upscore-cbuf_dsn3' }
layer { name: "concat_cbuf_3_2" bottom: "upscore-cbuf_dsn3"  bottom: "score-cbuf_dsn2" top: "concat-cbuf_upscore2" type: "Concat"
  concat_param { concat_dim: 1} }
layer { 
  name: 'cat2-cbuf_score' type: "Convolution" 
  bottom: 'concat-cbuf_upscore2' top: 'concat2-cbuf_score'
  param { lr_mult: 0.05 decay_mult: 1 } param { lr_mult: 0.002 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 2 kernel_size: 1  weight_filler {type: "constant" value: 0.25 } } 
}

layer{
  type: "Slice" name: "cbuf_slice2"
  bottom: "concat2-cbuf_score"
  top: "concat2-cbuf_score-slice1"
  top: "concat2-cbuf_score-slice2"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

# the loss of side output2
layer { type: "Deconvolution" name: 'upsamplec_2' bottom: 'concat2-cbuf_score-slice2' top: 'concat2-cbuf_score-up-loss'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 4 stride: 2 num_output: 1 } }
layer { type: "Crop" name: 'crop2-cbuf_loss' bottom: 'concat2-cbuf_score-up-loss' bottom: 'data' top: 'concat2-cbuf_score-loss' }
layer { type: "Sigmoid" name: "sigmoid-cbuf_dsn2" bottom: "concat2-cbuf_score-loss"  top:"sigmoid-cbuf_dsn2"}
#----
layer { type: "Deconvolution" name: 'upsamplec_2_1' bottom: 'concat2-cbuf_score-slice1' top: 'score-cbuf_dsn2-up'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 4 stride: 2 num_output: 1 } }
layer { type: "Crop" name: 'cbuf_crop2' bottom: 'score-cbuf_dsn2-up' bottom: 'score-cbuf_dsn1' top: 'upscore-cbuf_dsn2' }
layer { name: "concat_cbuf_2_1" bottom: "upscore-cbuf_dsn2"  bottom: "score-cbuf_dsn1" top: "concat-cbuf_upscore1" type: "Concat"
  concat_param { concat_dim: 1} }
layer { 
  name: 'cat1-cbuf_score' type: "Convolution" 
  bottom: 'concat-cbuf_upscore1' top: 'concat1-cbuf_score'
  param { lr_mult: 0.05 decay_mult: 1 } param { lr_mult: 0.002 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 1 kernel_size: 1  weight_filler {type: "constant" value: 0.25 } } 
}

# the loss of side output1
layer { type: "Crop" name: 'crop1-cbuf_loss' bottom: 'concat1-cbuf_score' bottom: 'data' top: 'concat1-cbuf_score-loss' }
layer { type: "Sigmoid" name: "sigmoid-cbuf_dsn1" bottom: "concat1-cbuf_score-loss"  top:"sigmoid-cbuf_dsn1"}

#-----


#-----------------------------------------------------------
### Concat and multiscale weight layer ###
layer { name: "cbuf_concat" bottom: "concat1-cbuf_score-loss"  bottom: "concat2-cbuf_score-loss" bottom: "concat3-cbuf_score-loss" 
         bottom: "concat4-cbuf_score-loss" bottom: "concat5-cbuf_score-loss" top: "concat-cbuf_upscore" type: "Concat"
  concat_param { concat_dim: 1} }
layer { name: 'new-cbuf_score-weighting' type: "Convolution" bottom: 'concat-cbuf_upscore' top: 'upscore-cbuf_fuse'
  param { lr_mult: 0.001 decay_mult: 1 } param { lr_mult: 0.002 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 weight_filler {type: "constant" value: 0.2} } }
layer { type: "Sigmoid" name: "sigmoid-cbuf_fuse" bottom: "upscore-cbuf_fuse"  top:"sigmoid-cbuf_fuse"}



## buffer layers for symmetry
layer { bottom: 'conv1_2' top: 'conv_sbuf_1' name: 'conv_sbuf_1' type: "Convolution"
  param { lr_mult: 100 decay_mult: 1 } param { lr_mult: 200 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3 }}
layer { bottom: 'conv_sbuf_1' top: 'conv_sbuf_1' name: 'relu_sbuf_1' type: "ReLU" }
layer { bottom: 'conv2_2' top: 'conv_sbuf_2' name: 'conv_sbuf_2' type: "Convolution"
  param { lr_mult: 100 decay_mult: 1 } param { lr_mult: 200 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3 }}
layer { bottom: 'conv_sbuf_2' top: 'conv_sbuf_2' name: 'relu_sbuf_2' type: "ReLU" }
layer { bottom: 'conv3_3' top: 'conv_sbuf_3' name: 'conv_sbuf_3' type: "Convolution"
  param { lr_mult: 100 decay_mult: 1 } param { lr_mult: 200 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3 }}
layer { bottom: 'conv_sbuf_3' top: 'conv_sbuf_3' name: 'relu_sbuf_3' type: "ReLU" }
layer { bottom: 'conv4_3' top: 'conv_sbuf_4' name: 'conv_sbuf_4' type: "Convolution"
  param { lr_mult: 100 decay_mult: 1 } param { lr_mult: 200 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 }}
layer { bottom: 'conv_sbuf_4' top: 'conv_sbuf_4' name: 'relu_sbuf_4' type: "ReLU" }
layer { bottom: 'conv5_3' top: 'conv_sbuf_5' name: 'conv_sbuf_5' type: "Convolution"
  param { lr_mult: 100 decay_mult: 1 } param { lr_mult: 200 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 }}
layer { bottom: 'conv_sbuf_5' top: 'conv_sbuf_5' name: 'relu_sbuf_5' type: "ReLU" }



#-----
layer { name: 'score-sbuf_dsn1' type: "Convolution" bottom: 'conv_sbuf_1' top: 'score-sbuf_dsn1'
  param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#----
layer { name: 'score-sbuf_dsn2' type: "Convolution" bottom: 'conv_sbuf_2' top: 'score-sbuf_dsn2'
  param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#---
layer { name: 'score-sbuf_dsn3' type: "Convolution" bottom: 'conv_sbuf_3' top: 'score-sbuf_dsn3'
  param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#--
layer { name: 'score-sbuf_dsn4' type: "Convolution" bottom: 'conv_sbuf_4' top: 'score-sbuf_dsn4'
  param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#-
layer { name: 'score-sbuf_dsn5' type: "Convolution" bottom: 'conv_sbuf_5' top: 'score-sbuf_dsn5'
  param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 2 kernel_size: 1} }
  
layer{
  type: "Slice" name: "sbuf_slice5"
  bottom: "score-sbuf_dsn5"
  top: "score-sbuf_dsn5-slice1"
  top: "score-sbuf_dsn5-slice2"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

# the loss of side output5
layer { type: "Deconvolution" name: 'upsamples_16' bottom: 'score-sbuf_dsn5-slice2' top: 'concat5-sbuf_score-up-loss'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 32 stride: 16 num_output: 1 } }
layer { type: "Crop" name: 'crop5-sbuf_loss' bottom: 'concat5-sbuf_score-up-loss' bottom: 'data' top: 'concat5-sbuf_score-loss' }
layer { type: "Sigmoid" name: "sigmoid-sbuf_dsn5" bottom: "concat5-sbuf_score-loss"  top:"sigmoid-sbuf_dsn5"}

#-
# 2x
layer { type: "Deconvolution" name: 'upsamples_5_4' bottom: 'score-sbuf_dsn5-slice1' top: 'score-sbuf_dsn5-up'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 4 stride: 2 num_output: 1 } }
layer { type: "Crop" name: 'sbuf_crop5' bottom: 'score-sbuf_dsn5-up' bottom: 'score-sbuf_dsn4' top: 'upscore-sbuf_dsn5' }

layer { name: "concat_sbuf_5_4" bottom: "upscore-sbuf_dsn5"  bottom: "score-sbuf_dsn4" top: "concat-sbuf_upscore4" type: "Concat"
  concat_param { concat_dim: 1} }
layer { 
  name: 'cat4-sbuf_score' type: "Convolution" 
  bottom: 'concat-sbuf_upscore4' top: 'concat4-sbuf_score'
  param { lr_mult: 0.05 decay_mult: 1 } param { lr_mult: 0.002 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 2 kernel_size: 1 weight_filler {type: "constant" value: 0.25 } } 
}

layer{
  type: "Slice" name: "ssbuf_lice4"
  bottom: "concat4-sbuf_score"
  top: "concat4-sbuf_score-slice1"
  top: "concat4-sbuf_score-slice2"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

# the loss of side output4
layer { type: "Deconvolution" name: 'upsamples_8' bottom: 'concat4-sbuf_score-slice2' top: 'concat4-sbuf_score-up-loss'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 16 stride: 8 num_output: 1 } }
layer { type: "Crop" name: 'crop4-sbuf_loss' bottom: 'concat4-sbuf_score-up-loss' bottom: 'data' top: 'concat4-sbuf_score-loss' }
layer { type: "Sigmoid" name: "sigmoid-sbuf_dsn4" bottom: "concat4-sbuf_score-loss"  top:"sigmoid-sbuf_dsn4"}

#--
# 2x
layer { type: "Deconvolution" name: 'upsamples_4_3' bottom: 'concat4-sbuf_score-slice1' top: 'score-sbuf_dsn4-up'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 4 stride: 2 num_output: 1 } }  
layer { type: "Crop" name: 'sbuf_crop4' bottom: 'score-sbuf_dsn4-up' bottom: 'score-sbuf_dsn3' top: 'upscore-sbuf_dsn4' }
layer { name: "concat_sbuf_4_3" bottom: "upscore-sbuf_dsn4"  bottom: "score-sbuf_dsn3" top: "concat-sbuf_upscore3" type: "Concat"
  concat_param { concat_dim: 1} }
layer { 
  name: 'cat3-sbuf_score' type: "Convolution" 
  bottom: 'concat-sbuf_upscore3' top: 'concat3-sbuf_score'
  param { lr_mult: 0.05 decay_mult: 1 } param { lr_mult: 0.002 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 2 kernel_size: 1  weight_filler {type: "constant" value: 0.25 } } 
}

layer{
  type: "Slice" name: "sbuf_slice3"
  bottom: "concat3-sbuf_score"
  top: "concat3-sbuf_score-slice1"
  top: "concat3-sbuf_score-slice2"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

# the loss of side output3
layer { type: "Deconvolution" name: 'upsamples_4' bottom: 'concat3-sbuf_score-slice2' top: 'concat3-sbuf_score-up-loss'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 8 stride: 4 num_output: 1 } }
layer { type: "Crop" name: 'crop3-sbuf_loss' bottom: 'concat3-sbuf_score-up-loss' bottom: 'data' top: 'concat3-sbuf_score-loss' }
layer { type: "Sigmoid" name: "sigmoid-sbuf_dsn3" bottom: "concat3-sbuf_score-loss"  top:"sigmoid-sbuf_dsn3"}

#---
# 2x
layer { type: "Deconvolution" name: 'upsamples_3_2' bottom: 'concat3-sbuf_score-slice1' top: 'score-sbuf_dsn3-up'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 4 stride: 2 num_output: 1 } }
layer { type: "Crop" name: 'sbuf_crop3' bottom: 'score-sbuf_dsn3-up' bottom: 'score-sbuf_dsn2' top: 'upscore-sbuf_dsn3' }
layer { name: "concat_sbuf_3_2" bottom: "upscore-sbuf_dsn3"  bottom: "score-sbuf_dsn2" top: "concat-sbuf_upscore2" type: "Concat"
  concat_param { concat_dim: 1} }
layer { 
  name: 'cat2-sbuf_score' type: "Convolution" 
  bottom: 'concat-sbuf_upscore2' top: 'concat2-sbuf_score'
  param { lr_mult: 0.05 decay_mult: 1 } param { lr_mult: 0.002 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 2 kernel_size: 1  weight_filler {type: "constant" value: 0.25 } } 
}

layer{
  type: "Slice" name: "sbuf_slice2"
  bottom: "concat2-sbuf_score"
  top: "concat2-sbuf_score-slice1"
  top: "concat2-sbuf_score-slice2"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

# the loss of side output2
layer { type: "Deconvolution" name: 'upsamples_2' bottom: 'concat2-sbuf_score-slice2' top: 'concat2-sbuf_score-up-loss'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 4 stride: 2 num_output: 1 } }
layer { type: "Crop" name: 'crop2-sbuf_loss' bottom: 'concat2-sbuf_score-up-loss' bottom: 'data' top: 'concat2-sbuf_score-loss' }
layer { type: "Sigmoid" name: "sigmoid-sbuf_dsn2" bottom: "concat2-sbuf_score-loss"  top:"sigmoid-sbuf_dsn2"}
#----
layer { type: "Deconvolution" name: 'upsamples_2_1' bottom: 'concat2-sbuf_score-slice1' top: 'score-sbuf_dsn2-up'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 4 stride: 2 num_output: 1 } }
layer { type: "Crop" name: 'sbuf_crop2' bottom: 'score-sbuf_dsn2-up' bottom: 'score-sbuf_dsn1' top: 'upscore-sbuf_dsn2' }
layer { name: "concat_sbuf_2_1" bottom: "upscore-sbuf_dsn2"  bottom: "score-sbuf_dsn1" top: "concat-sbuf_upscore1" type: "Concat"
  concat_param { concat_dim: 1} }
layer { 
  name: 'cat1-sbuf_score' type: "Convolution" 
  bottom: 'concat-sbuf_upscore1' top: 'concat1-sbuf_score'
  param { lr_mult: 0.05 decay_mult: 1 } param { lr_mult: 0.002 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 1 kernel_size: 1  weight_filler {type: "constant" value: 0.25 } } 
}

# the loss of side output1
layer { type: "Crop" name: 'crop1-sbuf_loss' bottom: 'concat1-sbuf_score' bottom: 'data' top: 'concat1-sbuf_score-loss' }
layer { type: "Sigmoid" name: "sigmoid-sbuf_dsn1" bottom: "concat1-sbuf_score-loss"  top:"sigmoid-sbuf_dsn1"}

#-----


#-----------------------------------------------------------
### Concat and multiscale weight layer ###
layer { name: "sbuf_concat" bottom: "concat1-sbuf_score-loss"  bottom: "concat2-sbuf_score-loss" bottom: "concat3-sbuf_score-loss" 
         bottom: "concat4-sbuf_score-loss" bottom: "concat5-sbuf_score-loss" top: "concat-sbuf_upscore" type: "Concat"
  concat_param { concat_dim: 1} }
layer { name: 'new-sbuf_score-weighting' type: "Convolution" bottom: 'concat-sbuf_upscore' top: 'upscore-sbuf_fuse'
  param { lr_mult: 0.001 decay_mult: 1 } param { lr_mult: 0.002 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 weight_filler {type: "constant" value: 0.2} } }
layer { type: "Sigmoid" name: "sigmoid-sbuf_fuse" bottom: "upscore-sbuf_fuse"  top:"sigmoid-sbuf_fuse"}